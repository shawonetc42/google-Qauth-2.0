const express = require("express");
const mongoose = require("mongoose");
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
const bodyParser = require("body-parser");

// Express অ্যাপ তৈরি করুন
const app = express();

// Middleware
app.use(bodyParser.json());

// MongoDB কানেকশন
const MONGO_URI =
  "mongodb+srv://shawondata:shawondata@cluster0.sigdzxx.mongodb.net/shawon?retryWrites=true&w=majority";
mongoose
  .connect(MONGO_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => console.log("MongoDB Connected"))
  .catch((err) => console.log(err));

// ইউজার মডেল
const UserSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
  },
  email: {
    type: String,
    required: true,
    unique: true,
  },
  password: {
    type: String,
    required: true,
  },
  date: {
    type: Date,
    default: Date.now,
  },
});

const User = mongoose.model("userss", UserSchema);

// রেজিস্ট্রেশন রুট
app.post("/api/auth/register", async (req, res) => {
  const { name, email, password } = req.body;

  try {
    // ইউজার যদি ইতিমধ্যে থাকে তা চেক করুন
    let user = await User.findOne({ email });
    if (user) {
      return res.status(400).json({ msg: "User already exists" });
    }

    // নতুন ইউজার তৈরি করুন
    user = new User({
      name,
      email,
      password,
    });

    // পাসওয়ার্ড হ্যাশ করুন
    const salt = await bcrypt.genSalt(10);
    user.password = await bcrypt.hash(password, salt);

    // ইউজার সেভ করুন
    await user.save();

    // JWT টোকেন তৈরি করুন
    const payload = {
      user: {
        id: user.id,
      },
    };

    jwt.sign(
      payload,
      "yourSecretKey", // এখানে আপনার সিক্রেট কি ব্যবহার করুন
      { expiresIn: 360000 },
      (err, token) => {
        if (err) throw err;
        res.json({ token });
      }
    );
  } catch (err) {
    console.error(err.message);
    res.status(500).send("Server error");
  }
});

// লগইন রুট
app.post("/api/auth/login", async (req, res) => {
  const { email, password } = req.body;

  try {
    // ইউজার খুঁজে বের করুন
    let user = await User.findOne({ email });
    if (!user) {
      return res.status(400).json({ msg: "Invalid credentials" });
    }

    // পাসওয়ার্ড যাচাই করুন
    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) {
      return res.status(400).json({ msg: "Invalid credentials" });
    }

    // JWT টোকেন তৈরি করুন
    const payload = {
      user: {
        id: user.id,
      },
    };

    jwt.sign(
      payload,
      "yourSecretKey", // এখানে আপনার সিক্রেট কি ব্যবহার করুন
      { expiresIn: 360000 },
      (err, token) => {
        if (err) throw err;
        res.json({ token });
      }
    );
  } catch (err) {
    console.error(err.message);
    res.status(500).send("Server error");
  }
});

// সার্ভার চালু করা
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
